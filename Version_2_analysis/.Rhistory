unique(data$diabetes_new)
all = rbind(developed_diabetes_later, non_diabetes)
chisq.test(all$diabetes_new, all$discrim_bin)
unique(all$diabetes_new)
chisq.test(all$diabetes_new, all$discrim_bin)
unique(all$diabetes_new)
table(all$diabetes_new, all$discrim_bin)
all = rbind(developed_diabetes_later, non_diabetes)
group_by(all$start_new)
all = rbind(developed_diabetes_later, non_diabetes)
all %>%
group_by(start_new) %>% chisq.test(all$diabetes_new, all$discrim_bin)
library(dplyr)
all = rbind(developed_diabetes_later, non_diabetes)
all %>%
group_by(start_new) %>% chisq.test(all$diabetes_new, all$discrim_bin)
all = rbind(developed_diabetes_later, non_diabetes)
all %>%
group_by(start_new) %>% unique(all$diabetes_new)
all = rbind(developed_diabetes_later, non_diabetes)
all %>%
group_by(start_new) %>% table(all$diabetes_new, all$discrim_bin)
all$discrim_bin
all$diabetes_new
all %>% group_by(start_new) %>% table(all$diabetes_new, all$discrim_bin)
all %>% group_by(start_new) %>% chisq.test(all$diabetes_new, all$discrim_bin)
all %>% group_by(start_new) %>% chisq.test(all$diabetes_new, all$discrim_bin)
all = as.data.frame(all)
all %>% group_by(start_new) %>% chisq.test(all$diabetes_new, all$discrim_bin)
all %>% group_by(start_new) %>% chisq.test(diabetes_new, discrim_bin)
library(stats)
all %>% group_by(start_new) %>% chisq.test(all$diabetes_new, all$discrim_bin)
all = rbind(developed_diabetes_later, non_diabetes)
all = as.data.frame(all)
all %>% group_by(start_new) %>% chisq.test(all$diabetes_new, all$discrim_bin)
all = rbind(developed_diabetes_later, non_diabetes)
all %>% group_by(start_new) %>% table(all$diabetes_new, all$discrim_bin)
all = rbind(developed_diabetes_later, non_diabetes)
all %>% group_by(start_new) %>% table(all$diabetes_new, all$discrim_bin)
all %>% group_by(start_new) %>% table(diabetes_new, discrim_bin)
all %>% group_by(start_new) %>% table(diabetes_new, discrim_bin)
all %>% group_by(all$start_new) %>% table(all$diabetes_new, all$discrim_bin)
all_timepoint1 = subset(all, all$start_new = 1)
all_timepoint1 = subset(all, all$start_new == 1)
chisq.test(all_timepoint1$diabetes_new, all_timepoint1$discrim_bin)
all_timepoint1 = subset(all, all$start_new == 1)
chisq.test(all_timepoint1$diabetes_new, all_timepoint1$discrim_bin)
table(all_timepoint1$diabetes_new, all_timepoint1$discrim_bin)
all_timepoint0 = subset(all, all$start_new == 0)
chisq.test(all_timepoint0$diabetes_new, all_timepoint0$discrim_bin)
chisq.test(all_timepoint0$diabetes_new, all_timepoint0$discrim_bin)
chisq.test(all_timepoint0$diabetes_new, all_timepoint0$discrim_bin)
developed_diabetes_later_baseline
all_timepoint2 = subset(all, all$start_new == 2)
chisq.test(all_timepoint2$diabetes_new, all_timepoint2$discrim_bin)
table(all_timepoint2$diabetes_new, all_timepoint2$discrim_bin)
all_timepoint3 = subset(all, all$start_new == 3)
chisq.test(all_timepoint3$diabetes_new, all_timepoint3$discrim_bin)
chisq.test(all_timepoint3$diabetes_new, all_timepoint3$discrim_bin)
chisq.test(all_timepoint1$diabetes_new, all_timepoint1$discrim_bin)
table(all_timepoint1$diabetes_new, all_timepoint1$discrim_bin)
all_timepoint0 = subset(all, all$start_new == 0)
chisq.test(all_timepoint0$diabetes_new, all_timepoint0$discrim_bin)
all_timepoint0
all_timepoint0$diabetes_new
chisq.test(all$diabetes_new, all$discrim_bin)
chisq.test(all$diabetes_new, all$race_white)
source("~/my_docs/proj/Cumulative_effects_HRS/Version_2_analysis/MAIN_marginalised_groups_discrim_bin_diabetesTHIS_WAVE.R")
source("~/my_docs/proj/Cumulative_effects_HRS/Version_2_analysis/MAIN_marginalised_groups_discrim_bin_diabetesTHIS_WAVE.R")
source("~/my_docs/proj/Cumulative_effects_HRS/Version_2_analysis/MAIN_marginalised_groups_discrim_bin_diabetesTHIS_WAVE.R")
source("~/my_docs/proj/Cumulative_effects_HRS/Version_2_analysis/summary_score_Bootstrapped_CI.R")
source("~/my_docs/proj/Cumulative_effects_HRS/Version_2_analysis/MAIN_marginalised_groups_discrim_bin_diabetesTHIS_WAVE.R")
source("~/my_docs/proj/Cumulative_effects_HRS/Version_2_analysis/MAIN_marginalised_groups_discrim_bin_diabetesTHIS_WAVE.R")
all_results = read.csv(paste(OUTPUT_ROOT, "All_clean_data_HRsonly_diabetes_new_bin.csv", sep=""))
source("~/my_docs/proj/Cumulative_effects_HRS/Version_2_analysis/MAIN_marginalised_groups_discrim_bin_diabetesTHIS_WAVE.R")
write.csv(all_discrim_bin_diabetes_thisWAVE_7models, paste(OUTPUT_ROOT, "all_discrim_bin_diabetes_new_bin.csv", sep=""))
all_discrim_bin_diabetes_thisWAVE_7models = Seven_models_drop_baseline(subset_var1 = "NA",
subset_value1 = "NA",
subset_BMI = "NA",
subset_BMI_value  = "NA",
subset_var2 = "NA",
subset_value2 = "NA",
subset_var3= "NA",
subset_value3 = "NA",
subset_name = "ALL",
subset_reason1 = "NA",
subset_reason1_value = "NA",
subset_reason2 = "NA",
subset_reason2_value =  "NA",
subset_reason3 = "NA",
subset_reason3_value = "NA",
HRS2008_data = HRS2008_data,
HRS2010_data = HRS2010_data,
HRS2012_data = HRS2012_data,
HRS2014_data = HRS2014_data,
HRS2016_data = HRS2016_data,
HRS2018_data = HRS2018_data,
exposure = exposure,
outcome = outcome)
source("~/my_docs/proj/Cumulative_effects_HRS/Version_2_analysis/MAIN_marginalised_groups_discrim_bin_diabetesTHIS_WAVE.R")
source("~/my_docs/proj/Cumulative_effects_HRS/Version_2_analysis/MAIN_marginalised_groups_discrim_bin_diabetesTHIS_WAVE.R")
source("~/my_docs/proj/Cumulative_effects_HRS/Version_2_analysis/Seven_models_drop_baseline.R")
source("~/my_docs/proj/Cumulative_effects_HRS/Version_2_analysis/MAIN_marginalised_groups_discrim_bin_diabetesTHIS_WAVE.R")
source("~/my_docs/proj/Cumulative_effects_HRS/Version_2_analysis/MAIN_marginalised_groups_discrim_bin_diabetesTHIS_WAVE.R")
all_discrim_bin_diabetes_thisWAVE_7models
all_discrim_bin_diabetes_thisWAVE_7models = Seven_models_drop_baseline(subset_var1 = "NA",
subset_value1 = "NA",
subset_BMI = "NA",
subset_BMI_value  = "NA",
subset_var2 = "NA",
subset_value2 = "NA",
subset_var3= "NA",
subset_value3 = "NA",
subset_name = "ALL",
subset_reason1 = "NA",
subset_reason1_value = "NA",
subset_reason2 = "NA",
subset_reason2_value =  "NA",
subset_reason3 = "NA",
subset_reason3_value = "NA",
HRS2008_data = HRS2008_data,
HRS2010_data = HRS2010_data,
HRS2012_data = HRS2012_data,
HRS2014_data = HRS2014_data,
HRS2016_data = HRS2016_data,
HRS2018_data = HRS2018_data,
exposure = exposure,
outcome = outcome)
source("~/my_docs/proj/Cumulative_effects_HRS/Version_2_analysis/Seven_models_drop_baseline.R")
source("~/my_docs/proj/Cumulative_effects_HRS/Version_2_analysis/MAIN_marginalised_groups_discrim_bin_diabetesTHIS_WAVE.R")
all_discrim_bin_diabetes_thisWAVE_7models
write.csv(all_discrim_bin_diabetes_thisWAVE_7models, paste(OUTPUT_ROOT, "all_discrim_bin_diabetes_new_bin.csv", sep=""))
all_discrim_bin_diabetes_thisWAVE_7models
source("~/my_docs/proj/Cumulative_effects_HRS/Version_2_analysis/MAIN_marginalised_groups_discrim_bin_diabetesTHIS_WAVE.R")
dataset_noNAs_timepoints
dataset_noNAs_timepoints
dataset = read.csv(file = "/Users/aliya/my_docs/proj/Cumulative_effects_HRS/Results/dataset_noNAs_timepoints_TEST_DELETE_AFTER_debugging_24nov2022.csv")
were_present_at_four_points_ids = c(16602020,
35607020,
78026021,
145768020,
210031010,
210661010,
501617010,
501870010,
502417020,
57714040,
916299010)
ID_4tp = unique(were_present_at_four_points_ids)
dataset_noftp_timepoints<-dataset[!(dataset$HHIDPN %in% ID_4tp),]
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
dataset_ftp_timepoints<-dataset[(dataset$HHIDPN %in% ID_4tp),]
dataset_ftp_timepoints
dataset_ftp_timepoints
dataset_ftp_timepoints_baseline = dataset_ftp_timepoints[(dataset_ftp_timepoints$start_new == 0),]
dataset_ftp_timepoints_baseline
summary(dataset_ftp_timepoints_baseline)
dataset_ftp_timepoints_baseline
source("~/proj/bayesian_review_methods/MAIN.R")
Active_inactive_Human = read.csv(paste(DATA_ROOT, "Active_inactive_Human_March06_FINAL.csv", sep =""))
Active_inactive_Human = read.csv(paste(DATA_ROOT, "Active_inactive_Human_March06_FINAL.csv", sep =""))
DATA_ROOT = "/Users/aliyaamirova/proj/bayesian_review_methods/DATA/"
SOURCE_ROOT = paste(directory, "proj/bayesian_review_methods/", sep = "")
directory = "/Users/aliyaamirova/"
SOURCE_ROOT = paste(directory, "proj/bayesian_review_methods/", sep = "")
SOURCE_ROOT
source("~/proj/bayesian_review_methods/MAIN.R")
Active_inactive_Human = read.csv(paste(DATA_ROOT, "Active_inactive_Human_March06_FINAL.csv", sep =""))
Active_inactive_Human
Active_inactive_Human$belief_statement
Active_inactive_Human$construct
Active_inactive_Human
directory = "/Users/aliyaamirova/"
#directory = "/Users/aliya/my_docs/"
###########  source root
SOURCE_ROOT = paste(directory, "proj/bayesian_review_methods/", sep = "")
###########  data root
DATA_ROOT = paste(directory, "proj/bayesian_review_methods/DATA/", sep = "")
########### Set the root location on the user's local machine to save output files.
OUTPUT_ROOT = paste(directory, "proj/bayesian_review_methods/RESULTS/", sep = "")
#x = read.csv(paste(DATA_ROOT, "Test_data_bayes_chatGPT.csv", sep="")) # new qualitative data
#x = read.csv(paste(DATA_ROOT, "input_chatGPT.csv", sep="")) # new qualitative data
Active_inactive_Human = read.csv(paste(DATA_ROOT, "Active_inactive_Human_March06_FINAL.csv", sep =""))
Active_inactive_Human$belief_statement
Active_inactive_Human$construct
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
Active_inactive_Human
x
PriorExpert_N_PA_X
source("~/proj/bayesian_review_methods/MAIN.R")
x
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
class(Construct)
typeof(Construct)
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
Construct
Construct = Construct[complete.cases(Construct), ]
Construct
#############
Active_inactive_Human$Construct = case_when(Active_inactive_Human$construct == "BaCap+_selfEfficacy" ~ "SelfEfficacy",
Active_inactive_Human$construct ==  "BaCap-_selfEfficacy_ hlth_cndtns" ~ "Comorbidity",
Active_inactive_Human$construct ==  "BaCap-_selfEfficacy_older_age" ~ "Age",
#Active_inactive_Human$construct ==  "NA" ~ "PositiveAttitude", # no data from human prior
Active_inactive_Human$construct ==  "SI+__social_support_emotional" ~ "SocialSupport",
Active_inactive_Human$construct ==  "Emotion-" ~ "NegativeAttitude")
x = Active_inactive_Human[complete.cases(Active_inactive_Human), ]
print(x)
print(x)
source("~/proj/bayesian_review_methods/MAIN.R")
print(x)
#############
Active_inactive_Human$Construct = case_when(Active_inactive_Human$construct == "BaCap+_selfEfficacy" ~ "SelfEfficacy",
Active_inactive_Human$construct ==  "BaCap-_selfEfficacy_ hlth_cndtns" ~ "Comorbidity",
Active_inactive_Human$construct ==  "BaCap-_selfEfficacy_older_age" ~ "Age",
#Active_inactive_Human$construct ==  "NA" ~ "PositiveAttitude", # no data from human prior
Active_inactive_Human$construct ==  "SI+__social_support_emotional" ~ "SocialSupport",
Active_inactive_Human$construct ==  "Emotion-" ~ "NegativeAttitude")
x = Active_inactive_Human[complete.cases(Active_inactive_Human), ]
print(x)
x$PriorExpert_N_PA_X   =   x$active_n
x$PriorExpert_N_PA_noX =   x$active_noX_n
x$PriorExpert_N_noPA_X =   x$sedentary_n
x$PriorExpert_N_noPA_noX = x$sedentary_noX_n
print(x)
source("~/proj/bayesian_review_methods/MAIN.R")
#install.packages("RColorBrewer")
library(tidyverse)
library(dplyr)
library(assertthat)
library(ggplot2)
library(filenamer)
library(reshape2)
library(tibble)
library(compute.es)
library(metafor)
library(bayesplot)
library(ggplot2)
library(ggridges)
library(rstan)
library(coda)
library(bayestestR)
library(HDInterval)
library(assertthat)
library(RColorBrewer)
## Set the root directory to look for source code.
#SOURCE_ROOT = "/Users/aliyaamirova/proj/bayesian_meta_analysis/"
print("we should reduce to those constructs that are measured using perceived latent variables (self-efficacy, positive attitude, negative attitude, perceived social support (CHECK THIS ONE), symptom distress")
print("consider how to deal with constructs with more than one belief statements (aggregate/average...?)")
print("decide on the variance for the prior")
print("include code for dealing with 0s in contingecy table for prior")
print("systematically include all constructs from quant and from qual")
print("plot prior from chatGPT and human prior next to each other")
print("compare chatGPT and human prior using prior–data conflict determination using data agreement criterion")
print("plot violin distributions for belief quotes etc...")
print("check overleaf for to do list")
########### DIRECTORY
directory = "/Users/aliyaamirova/"
#directory = "/Users/aliya/my_docs/"
###########  source root
SOURCE_ROOT = paste(directory, "proj/bayesian_review_methods/", sep = "")
###########  data root
DATA_ROOT = paste(directory, "proj/bayesian_review_methods/DATA/", sep = "")
########### Set the root location on the user's local machine to save output files.
OUTPUT_ROOT = paste(directory, "proj/bayesian_review_methods/RESULTS/", sep = "")
#x = read.csv(paste(DATA_ROOT, "Test_data_bayes_chatGPT.csv", sep="")) # new qualitative data
#x = read.csv(paste(DATA_ROOT, "input_chatGPT.csv", sep="")) # new qualitative data
Active_inactive_Human = read.csv(paste(DATA_ROOT, "Active_inactive_Human_March06_FINAL.csv", sep =""))
Active_inactive_Human$active_n #construct present in active PA_X
Active_inactive_Human$sedentary_n #construct present in sedentary noPA_X
Active_inactive_Human$total_n #construct present X
#total active = 7
#total sedentary = 9
Active_inactive_Human$active_noX_n = 7 - Active_inactive_Human$active_n
Active_inactive_Human$sedentary_noX_n = 9 - Active_inactive_Human$sedentary_n
Active_inactive_Human$noX_n =   16 - Active_inactive_Human$total_n
#############
Active_inactive_Human$Construct = case_when(Active_inactive_Human$construct == "BaCap+_selfEfficacy" ~ "SelfEfficacy",
Active_inactive_Human$construct ==  "BaCap-_selfEfficacy_ hlth_cndtns" ~ "Comorbidity",
Active_inactive_Human$construct ==  "BaCap-_selfEfficacy_older_age" ~ "Age",
#Active_inactive_Human$construct ==  "NA" ~ "PositiveAttitude", # no data from human prior
Active_inactive_Human$construct ==  "SI+__social_support_emotional" ~ "SocialSupport",
Active_inactive_Human$construct ==  "Emotion-" ~ "NegativeAttitude")
x = Active_inactive_Human[complete.cases(Active_inactive_Human), ]
print(x)
x$PriorExpert_N_PA_X   =   x$active_n
x$PriorExpert_N_PA_noX =   x$active_noX_n
x$PriorExpert_N_noPA_X =   x$sedentary_n
x$PriorExpert_N_noPA_noX = x$sedentary_noX_n
print(x)
if(x$PriorExpert_N_PA_X == 0 | x$PriorExpert_N_PA_noX == 0 | x$PriorExpert_N_noPA_X == 0 | x$PriorExpert_N_noPA_noX == 0) {
x %>%
dplyr::transmute(
PriorExpert_N_PA_X = PriorExpert_N_PA_X+0.5,
PriorExpert_N_PA_noX = PriorExpert_N_PA_noX+0.5,
PriorExpert_N_noPA_X = PriorExpert_N_noPA_X+0.5,
PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX+0.5,
)
x = x
}
print(x)
if(x$PriorExpert_N_PA_X == 0 | x$PriorExpert_N_PA_noX == 0 | x$PriorExpert_N_noPA_X == 0 | x$PriorExpert_N_noPA_noX == 0) {
x %>%
dplyr::transmute(
PriorExpert_N_PA_X = PriorExpert_N_PA_X+0.5,
PriorExpert_N_PA_noX = PriorExpert_N_PA_noX+0.5,
PriorExpert_N_noPA_X = PriorExpert_N_noPA_X+0.5,
PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX+0.5,
)
x = x
}
print(x)
if(x$PriorExpert_N_PA_X == 0 | x$PriorExpert_N_PA_noX == 0 | x$PriorExpert_N_noPA_X == 0 | x$PriorExpert_N_noPA_noX == 0) {
x %>%
dplyr::transmute(
PriorExpert_N_PA_X = PriorExpert_N_PA_X+0.5,
PriorExpert_N_PA_noX = PriorExpert_N_PA_noX+0.5,
PriorExpert_N_noPA_X = PriorExpert_N_noPA_X+0.5,
PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX+0.5,
)
x = x
}
print(x)
if(x$PriorExpert_N_PA_X == 0 | x$PriorExpert_N_PA_noX == 0 | x$PriorExpert_N_noPA_X == 0 | x$PriorExpert_N_noPA_noX == 0) {
x %>%
dplyr::transmute(
PriorExpert_N_PA_X = PriorExpert_N_PA_X+0.5,
PriorExpert_N_PA_noX = PriorExpert_N_PA_noX+0.5,
PriorExpert_N_noPA_X = PriorExpert_N_noPA_X+0.5,
PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX+0.5,
)
x = x
}
print(x)
if(x$PriorExpert_N_PA_X == 0 | x$PriorExpert_N_PA_noX == 0 | x$PriorExpert_N_noPA_X == 0 | x$PriorExpert_N_noPA_noX == 0) {
x %>%
transmute(
PriorExpert_N_PA_X = PriorExpert_N_PA_X+0.5,
PriorExpert_N_PA_noX = PriorExpert_N_PA_noX+0.5,
PriorExpert_N_noPA_X = PriorExpert_N_noPA_X+0.5,
PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX+0.5,
)
x = x
}
print(x)
x %>%
transmute(
PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5,
PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5,
PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5,
PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5,
)
x = x
}
if(x$PriorExpert_N_PA_X == 0 | x$PriorExpert_N_PA_noX == 0 | x$PriorExpert_N_noPA_X == 0 | x$PriorExpert_N_noPA_noX == 0) {
x %>%
transmute(
PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5,
PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5,
PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5,
PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5,
)
x = x
return(x)
}
ifelse(x$PriorExpert_N_PA_X == 0 | x$PriorExpert_N_PA_noX == 0 | x$PriorExpert_N_noPA_X == 0 | x$PriorExpert_N_noPA_noX == 0,
{
x %>%
transmute(
PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5,
PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5,
PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5,
PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5,
)
x = x
}
PriorExpert_N_PA_X = PriorExpert_N_PA_X
PriorExpert_N_PA_X = PriorExpert_N_PA_X
PriorExpert_N_PA_noX = PriorExpert_N_PA_noX
PriorExpert_N_noPA_X = PriorExpert_N_noPA_X
PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX
print(x)
ifelse(x$PriorExpert_N_PA_X == 0 | x$PriorExpert_N_PA_noX == 0 | x$PriorExpert_N_noPA_X == 0 | x$PriorExpert_N_noPA_noX == 0,
{
x %>%
transmute(
PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5,
PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5,
PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5,
PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5,
)
x = x
}
print(x)
ifelse(x$PriorExpert_N_PA_X == 0 | x$PriorExpert_N_PA_noX == 0 | x$PriorExpert_N_noPA_X == 0 | x$PriorExpert_N_noPA_noX == 0,
{
x %>%
transmute(
PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5,
PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5,
PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5,
PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5,
)
}
print(x)
ifelse(x$PriorExpert_N_PA_X == 0 | x$PriorExpert_N_PA_noX == 0 | x$PriorExpert_N_noPA_X == 0 | x$PriorExpert_N_noPA_noX == 0,
x %>% transmute( PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5, PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5, PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5, PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5)
print(x)
print(x)
ifelse(x$PriorExpert_N_PA_X == 0 | x$PriorExpert_N_PA_noX == 0 | x$PriorExpert_N_noPA_X == 0 | x$PriorExpert_N_noPA_noX == 0,
x %>% transmute( PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5, PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5, PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5, PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5)
ifelse(x$PriorExpert_N_PA_X == 0 | x$PriorExpert_N_PA_noX == 0 | x$PriorExpert_N_noPA_X == 0 | x$PriorExpert_N_noPA_noX == 0,
x %>% transmute( PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5, PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5, PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5, PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5)
print(x)
x %>% transmute(PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5, PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5, PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5, PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5)
print(x)
ifelse(x$PriorExpert_N_PA_X == 0 | x$PriorExpert_N_PA_noX == 0 | x$PriorExpert_N_noPA_X == 0 | x$PriorExpert_N_noPA_noX == 0, x %>% transmute(PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5, PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5, PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5, PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5)
print(x)
ifelse(x$PriorExpert_N_PA_X == 0 | x$PriorExpert_N_PA_noX == 0 | x$PriorExpert_N_noPA_X == 0 | x$PriorExpert_N_noPA_noX == 0, x %>% transmute(PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5, PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5, PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5, PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5)
print(x)
ifelse(x$PriorExpert_N_PA_X == 0 | x$PriorExpert_N_PA_noX == 0 | x$PriorExpert_N_noPA_X == 0 | x$PriorExpert_N_noPA_noX == 0, x %>% transmute(PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5, PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5, PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5, PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5)
if(x$PriorExpert_N_PA_X == 0 | x$PriorExpert_N_PA_noX == 0 | x$PriorExpert_N_noPA_X == 0 | x$PriorExpert_N_noPA_noX == 0){x %>% transmute(PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5, PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5, PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5, PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5)}
if(x$PriorExpert_N_PA_X == 0 | x$PriorExpert_N_PA_noX == 0 | x$PriorExpert_N_noPA_X == 0 | x$PriorExpert_N_noPA_noX == 0)
{
x %>% transmute(PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5, PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5, PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5, PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5)
}
if(x$PriorExpert_N_PA_X == 0)
{
x %>% transmute(PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5,
PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5,
PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5,
PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5)
}
if(x$PriorExpert_N_PA_noX == 0)
{
x %>% transmute(PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5,
PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5,
PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5,
PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5)
}
if(x$PriorExpert_N_noPA_X == 0)
{
x %>% transmute(PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5,
PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5,
PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5,
PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5)
}
if(x$PriorExpert_N_noPA_noX == 0)
{
x %>% transmute(PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5,
PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5,
PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5,
PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5)
}
print(x)
if(x$PriorExpert_N_PA_X == 0 || x$PriorExpert_N_PA_noX == 0 || x$PriorExpert_N_noPA_X == 0 || x$PriorExpert_N_noPA_noX == 0)
{
x %>% transmute(PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5, PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5, PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5, PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5)
}
print(x)
if(x$PriorExpert_N_PA_X == 0 || x$PriorExpert_N_PA_noX == 0 || x$PriorExpert_N_noPA_X == 0 || x$PriorExpert_N_noPA_noX == 0)
{
x %>% transmute(PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5, PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5, PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5, PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5)
}
print(x)
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
log(x$PriorExpert_N_PA_X*x$PriorExpert_N_noPA_noX)/(x$PriorExpert_N_noPA_X*x$PriorExpert_N_PA_noX)
logOR = log(x$PriorExpert_N_PA_X*x$PriorExpert_N_noPA_noX)/(x$PriorExpert_N_noPA_X*x$PriorExpert_N_PA_noX)
logOR
logOR
log(x$PriorExpert_N_PA_X*x$PriorExpert_N_noPA_noX)/(x$PriorExpert_N_noPA_X*x$PriorExpert_N_PA_noX)
logOR = log(x$PriorExpert_N_PA_X*x$PriorExpert_N_noPA_noX)/(x$PriorExpert_N_noPA_X*x$PriorExpert_N_PA_noX)
logOR
print(x)
if(x$PriorExpert_N_PA_X == 0 || x$PriorExpert_N_PA_noX == 0 || x$PriorExpert_N_noPA_X == 0 || x$PriorExpert_N_noPA_noX == 0)
{
x %>% transmute(PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5, PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5, PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5, PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5)
}
logOR = log(x$PriorExpert_N_PA_X*x$PriorExpert_N_noPA_noX)/(x$PriorExpert_N_noPA_X*x$PriorExpert_N_PA_noX)
logOR
x %>% transmute(PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5, PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5, PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5, PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5)
x %>% transmute(PriorExpert_N_PA_X = PriorExpert_N_PA_X + 0.5, PriorExpert_N_PA_noX = PriorExpert_N_PA_noX + 0.5, PriorExpert_N_noPA_X = PriorExpert_N_noPA_X + 0.5, PriorExpert_N_noPA_noX = PriorExpert_N_noPA_noX + 0.5)
source("~/proj/bayesian_review_methods/MAIN.R")
logOR
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
print(x)
x = Active_inactive_Human[complete.cases(Active_inactive_Human), ]
x = Active_inactive_Human[complete.cases(Active_inactive_Human), ]
print(x)
Active_inactive_Human$construct
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
source("~/proj/bayesian_review_methods/MAIN.R")
